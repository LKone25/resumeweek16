name: Build, Push, and Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  id-token: write   # Required for GitHub OIDC
  contents: read    # Required for actions/checkout

env:
  AWS_REGION: us-east-1
  ECR_REPO_NAME: devops
  IMAGE_TAG: ${{ github.run_number }}

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ACTION_ROLE }}  # Must be full ARN (e.g., arn:aws:iam::123456789012:role/my-role)
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com  # Required for GitHub OIDC

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        id: build-push
        run: |
          docker build -t ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }} .
          docker push ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}

      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}
          format: "table"
          exit-code: "0"  # Don't fail on vulnerabilities (optional)
          severity: "CRITICAL,HIGH"
          ignore-unfixed: true  # Only report fixed vulnerabilities

      - name: Store Image URI in GitHub Env
        run: echo "IMAGE_URI=${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}" >> $GITHUB_ENV
    #deploy:
     # runs-on: ubuntu-latest
      #needs: Build
     # steps: 
